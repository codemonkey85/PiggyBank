//// <auto-generated />
//using System;
//using Microsoft.EntityFrameworkCore;
//using Microsoft.EntityFrameworkCore.Infrastructure;
//using Microsoft.EntityFrameworkCore.Migrations;
//using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
//using PiggyBank.Data;

//#nullable disable

//namespace PiggyBank.Data.Migrations
//{
//    [DbContext(typeof(PiggyBankContext))]
//    [Migration("20230601235223_Configurations")]
//    partial class Configurations
//    {
//        /// <inheritdoc />
//        protected override void BuildTargetModel(ModelBuilder modelBuilder)
//        {
//#pragma warning disable 612, 618
//            modelBuilder.HasAnnotation("ProductVersion", "8.0.0-preview.4.23259.3");

//            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
//                {
//                    b.Property<string>("Id")
//                        .HasColumnType("TEXT");

//                    b.Property<string>("ConcurrencyStamp")
//                        .IsConcurrencyToken()
//                        .HasColumnType("TEXT");

//                    b.Property<string>("Name")
//                        .HasMaxLength(256)
//                        .HasColumnType("TEXT");

//                    b.Property<string>("NormalizedName")
//                        .HasMaxLength(256)
//                        .HasColumnType("TEXT");

//                    b.HasKey("Id");

//                    b.HasIndex("NormalizedName")
//                        .IsUnique()
//                        .HasDatabaseName("RoleNameIndex");

//                    b.ToTable("AspNetRoles", (string)null);
//                });

//            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
//                {
//                    b.Property<int>("Id")
//                        .ValueGeneratedOnAdd()
//                        .HasColumnType("INTEGER");

//                    b.Property<string>("ClaimType")
//                        .HasColumnType("TEXT");

//                    b.Property<string>("ClaimValue")
//                        .HasColumnType("TEXT");

//                    b.Property<string>("RoleId")
//                        .IsRequired()
//                        .HasColumnType("TEXT");

//                    b.HasKey("Id");

//                    b.HasIndex("RoleId");

//                    b.ToTable("AspNetRoleClaims", (string)null);
//                });

//            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUser", b =>
//                {
//                    b.Property<string>("Id")
//                        .HasColumnType("TEXT");

//                    b.Property<int>("AccessFailedCount")
//                        .HasColumnType("INTEGER");

//                    b.Property<string>("ConcurrencyStamp")
//                        .IsConcurrencyToken()
//                        .HasColumnType("TEXT");

//                    b.Property<string>("Email")
//                        .HasMaxLength(256)
//                        .HasColumnType("TEXT");

//                    b.Property<bool>("EmailConfirmed")
//                        .HasColumnType("INTEGER");

//                    b.Property<bool>("LockoutEnabled")
//                        .HasColumnType("INTEGER");

//                    b.Property<DateTimeOffset?>("LockoutEnd")
//                        .HasColumnType("TEXT");

//                    b.Property<string>("NormalizedEmail")
//                        .HasMaxLength(256)
//                        .HasColumnType("TEXT");

//                    b.Property<string>("NormalizedUserName")
//                        .HasMaxLength(256)
//                        .HasColumnType("TEXT");

//                    b.Property<string>("PasswordHash")
//                        .HasColumnType("TEXT");

//                    b.Property<string>("PhoneNumber")
//                        .HasColumnType("TEXT");

//                    b.Property<bool>("PhoneNumberConfirmed")
//                        .HasColumnType("INTEGER");

//                    b.Property<string>("SecurityStamp")
//                        .HasColumnType("TEXT");

//                    b.Property<bool>("TwoFactorEnabled")
//                        .HasColumnType("INTEGER");

//                    b.Property<string>("UserName")
//                        .HasMaxLength(256)
//                        .HasColumnType("TEXT");

//                    b.HasKey("Id");

//                    b.HasIndex("NormalizedEmail")
//                        .HasDatabaseName("EmailIndex");

//                    b.HasIndex("NormalizedUserName")
//                        .IsUnique()
//                        .HasDatabaseName("UserNameIndex");

//                    b.ToTable("AspNetUsers", (string)null);
//                });

//            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
//                {
//                    b.Property<int>("Id")
//                        .ValueGeneratedOnAdd()
//                        .HasColumnType("INTEGER");

//                    b.Property<string>("ClaimType")
//                        .HasColumnType("TEXT");

//                    b.Property<string>("ClaimValue")
//                        .HasColumnType("TEXT");

//                    b.Property<string>("UserId")
//                        .IsRequired()
//                        .HasColumnType("TEXT");

//                    b.HasKey("Id");

//                    b.HasIndex("UserId");

//                    b.ToTable("AspNetUserClaims", (string)null);
//                });

//            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
//                {
//                    b.Property<string>("LoginProvider")
//                        .HasColumnType("TEXT");

//                    b.Property<string>("ProviderKey")
//                        .HasColumnType("TEXT");

//                    b.Property<string>("ProviderDisplayName")
//                        .HasColumnType("TEXT");

//                    b.Property<string>("UserId")
//                        .IsRequired()
//                        .HasColumnType("TEXT");

//                    b.HasKey("LoginProvider", "ProviderKey");

//                    b.HasIndex("UserId");

//                    b.ToTable("AspNetUserLogins", (string)null);
//                });

//            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
//                {
//                    b.Property<string>("UserId")
//                        .HasColumnType("TEXT");

//                    b.Property<string>("RoleId")
//                        .HasColumnType("TEXT");

//                    b.HasKey("UserId", "RoleId");

//                    b.HasIndex("RoleId");

//                    b.ToTable("AspNetUserRoles", (string)null);
//                });

//            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
//                {
//                    b.Property<string>("UserId")
//                        .HasColumnType("TEXT");

//                    b.Property<string>("LoginProvider")
//                        .HasColumnType("TEXT");

//                    b.Property<string>("Name")
//                        .HasColumnType("TEXT");

//                    b.Property<string>("Value")
//                        .HasColumnType("TEXT");

//                    b.HasKey("UserId", "LoginProvider", "Name");

//                    b.ToTable("AspNetUserTokens", (string)null);
//                });

//            modelBuilder.Entity("PiggyBank.Data.Models.Account", b =>
//                {
//                    b.Property<Guid>("Id")
//                        .HasColumnType("TEXT");

//                    b.Property<Guid>("CommodityId")
//                        .HasColumnType("TEXT");

//                    b.Property<string>("Description")
//                        .IsRequired()
//                        .HasMaxLength(255)
//                        .HasColumnType("TEXT");

//                    b.Property<bool>("IsHidden")
//                        .HasColumnType("INTEGER");

//                    b.Property<bool>("IsLocked")
//                        .HasColumnType("INTEGER");

//                    b.Property<bool>("IsPlaceholder")
//                        .HasColumnType("INTEGER");

//                    b.Property<string>("Name")
//                        .IsRequired()
//                        .HasMaxLength(255)
//                        .HasColumnType("TEXT");

//                    b.Property<Guid?>("ParentId")
//                        .HasColumnType("TEXT");

//                    b.Property<string>("Source")
//                        .IsRequired()
//                        .HasColumnType("TEXT");

//                    b.Property<string>("Type")
//                        .IsRequired()
//                        .HasColumnType("TEXT");

//                    b.HasKey("Id");

//                    b.HasIndex("CommodityId");

//                    b.HasIndex("ParentId");

//                    b.ToTable("Accounts");
//                });

//            modelBuilder.Entity("PiggyBank.Data.Models.Budget", b =>
//                {
//                    b.Property<Guid>("Id")
//                        .HasColumnType("TEXT");

//                    b.Property<string>("Description")
//                        .HasMaxLength(255)
//                        .HasColumnType("TEXT");

//                    b.Property<DateOnly>("EndDate")
//                        .HasColumnType("date");

//                    b.Property<bool>("IsHidden")
//                        .HasColumnType("INTEGER");

//                    b.Property<string>("Name")
//                        .IsRequired()
//                        .HasMaxLength(255)
//                        .HasColumnType("TEXT");

//                    b.Property<DateOnly>("StartDate")
//                        .HasColumnType("date");

//                    b.HasKey("Id");

//                    b.ToTable("Budgets");
//                });

//            modelBuilder.Entity("PiggyBank.Data.Models.BudgetAmount", b =>
//                {
//                    b.Property<Guid>("Id")
//                        .HasColumnType("TEXT");

//                    b.Property<Guid>("AccountId")
//                        .HasColumnType("TEXT");

//                    b.Property<DateOnly>("AmountDate")
//                        .HasColumnType("date");

//                    b.Property<Guid>("BudgetId")
//                        .HasColumnType("TEXT");

//                    b.Property<string>("Type")
//                        .IsRequired()
//                        .HasColumnType("TEXT");

//                    b.Property<decimal>("Value")
//                        .HasColumnType("TEXT");

//                    b.HasKey("Id");

//                    b.HasIndex("AccountId");

//                    b.HasIndex("BudgetId");

//                    b.ToTable("BudgetAmounts");
//                });

//            modelBuilder.Entity("PiggyBank.Data.Models.Commodity", b =>
//                {
//                    b.Property<Guid>("Id")
//                        .HasColumnType("TEXT");

//                    b.Property<string>("Cusip")
//                        .IsRequired()
//                        .HasMaxLength(255)
//                        .HasColumnType("TEXT");

//                    b.Property<bool>("IsLocked")
//                        .HasColumnType("INTEGER");

//                    b.Property<string>("Mnemonic")
//                        .IsRequired()
//                        .HasMaxLength(255)
//                        .HasColumnType("TEXT");

//                    b.Property<string>("Name")
//                        .IsRequired()
//                        .HasMaxLength(255)
//                        .HasColumnType("TEXT");

//                    b.Property<int>("Precision")
//                        .HasColumnType("INTEGER");

//                    b.Property<string>("Source")
//                        .IsRequired()
//                        .HasColumnType("TEXT");

//                    b.Property<string>("Symbol")
//                        .HasMaxLength(16)
//                        .HasColumnType("TEXT");

//                    b.Property<string>("Type")
//                        .IsRequired()
//                        .HasColumnType("TEXT");

//                    b.HasKey("Id");

//                    b.ToTable("Commodities");
//                });

//            modelBuilder.Entity("PiggyBank.Data.Models.Configuration", b =>
//                {
//                    b.Property<Guid>("Id")
//                        .HasColumnType("TEXT");

//                    b.Property<string>("Key")
//                        .IsRequired()
//                        .HasColumnType("TEXT");

//                    b.Property<string>("Value")
//                        .IsRequired()
//                        .HasMaxLength(255)
//                        .IsUnicode(false)
//                        .HasColumnType("TEXT");

//                    b.HasKey("Id");

//                    b.ToTable("Configurations");
//                });

//            modelBuilder.Entity("PiggyBank.Data.Models.ExternalId", b =>
//                {
//                    b.Property<Guid>("Id")
//                        .HasColumnType("TEXT");

//                    b.Property<string>("ExternalIdString")
//                        .IsRequired()
//                        .HasMaxLength(255)
//                        .HasColumnType("TEXT")
//                        .HasColumnName("ExternalId");

//                    b.Property<Guid>("LocalId")
//                        .HasColumnType("TEXT");

//                    b.Property<string>("Source")
//                        .IsRequired()
//                        .HasColumnType("TEXT");

//                    b.Property<string>("Type")
//                        .IsRequired()
//                        .HasColumnType("TEXT");

//                    b.HasKey("Id");

//                    b.HasIndex(new[] { "LocalId", "Source", "Type" }, "UX_LocalIDSourceType")
//                        .IsUnique();

//                    b.ToTable("ExternalIds");
//                });

//            modelBuilder.Entity("PiggyBank.Data.Models.Split", b =>
//                {
//                    b.Property<Guid>("Id")
//                        .HasColumnType("TEXT");

//                    b.Property<Guid>("AccountId")
//                        .HasColumnType("TEXT");

//                    b.Property<string>("Action")
//                        .IsRequired()
//                        .HasMaxLength(2048)
//                        .HasColumnType("TEXT");

//                    b.Property<string>("Memo")
//                        .IsRequired()
//                        .HasMaxLength(2048)
//                        .HasColumnType("TEXT");

//                    b.Property<decimal>("Quantity")
//                        .HasColumnType("decimal(28, 9)");

//                    b.Property<string>("Source")
//                        .IsRequired()
//                        .HasColumnType("TEXT");

//                    b.Property<Guid>("TransactionId")
//                        .HasColumnType("TEXT");

//                    b.Property<decimal>("Value")
//                        .HasColumnType("decimal(28, 9)");

//                    b.HasKey("Id");

//                    b.HasIndex("AccountId");

//                    b.HasIndex("TransactionId");

//                    b.ToTable("Splits");
//                });

//            modelBuilder.Entity("PiggyBank.Data.Models.Transaction", b =>
//                {
//                    b.Property<Guid>("Id")
//                        .HasColumnType("TEXT");

//                    b.Property<Guid>("CommodityId")
//                        .HasColumnType("TEXT");

//                    b.Property<string>("Description")
//                        .IsRequired()
//                        .HasMaxLength(2048)
//                        .HasColumnType("TEXT");

//                    b.Property<DateOnly>("PostDate")
//                        .HasColumnType("date");

//                    b.Property<string>("Source")
//                        .IsRequired()
//                        .HasColumnType("TEXT");

//                    b.HasKey("Id");

//                    b.HasIndex("CommodityId");

//                    b.ToTable("Transactions");
//                });

//            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
//                {
//                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
//                        .WithMany()
//                        .HasForeignKey("RoleId")
//                        .OnDelete(DeleteBehavior.Cascade)
//                        .IsRequired();
//                });

//            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
//                {
//                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
//                        .WithMany()
//                        .HasForeignKey("UserId")
//                        .OnDelete(DeleteBehavior.Cascade)
//                        .IsRequired();
//                });

//            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
//                {
//                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
//                        .WithMany()
//                        .HasForeignKey("UserId")
//                        .OnDelete(DeleteBehavior.Cascade)
//                        .IsRequired();
//                });

//            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
//                {
//                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
//                        .WithMany()
//                        .HasForeignKey("RoleId")
//                        .OnDelete(DeleteBehavior.Cascade)
//                        .IsRequired();

//                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
//                        .WithMany()
//                        .HasForeignKey("UserId")
//                        .OnDelete(DeleteBehavior.Cascade)
//                        .IsRequired();
//                });

//            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
//                {
//                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
//                        .WithMany()
//                        .HasForeignKey("UserId")
//                        .OnDelete(DeleteBehavior.Cascade)
//                        .IsRequired();
//                });

//            modelBuilder.Entity("PiggyBank.Data.Models.Account", b =>
//                {
//                    b.HasOne("PiggyBank.Data.Models.Commodity", "Commodity")
//                        .WithMany()
//                        .HasForeignKey("CommodityId")
//                        .IsRequired()
//                        .HasConstraintName("FK_Accounts_Commodities");

//                    b.HasOne("PiggyBank.Data.Models.Account", "Parent")
//                        .WithMany("Children")
//                        .HasForeignKey("ParentId")
//                        .HasConstraintName("FK_Accounts_Accounts");

//                    b.Navigation("Commodity");

//                    b.Navigation("Parent");
//                });

//            modelBuilder.Entity("PiggyBank.Data.Models.BudgetAmount", b =>
//                {
//                    b.HasOne("PiggyBank.Data.Models.Account", "Account")
//                        .WithMany()
//                        .HasForeignKey("AccountId")
//                        .OnDelete(DeleteBehavior.Cascade)
//                        .IsRequired()
//                        .HasConstraintName("FK_BudgetAmount_Account");

//                    b.HasOne("PiggyBank.Data.Models.Budget", "Budget")
//                        .WithMany("Amounts")
//                        .HasForeignKey("BudgetId")
//                        .IsRequired()
//                        .HasConstraintName("FK_BudgetAmount_Budget");

//                    b.Navigation("Account");

//                    b.Navigation("Budget");
//                });

//            modelBuilder.Entity("PiggyBank.Data.Models.Split", b =>
//                {
//                    b.HasOne("PiggyBank.Data.Models.Account", "Account")
//                        .WithMany("Splits")
//                        .HasForeignKey("AccountId")
//                        .IsRequired()
//                        .HasConstraintName("FK_Splits_Accounts");

//                    b.HasOne("PiggyBank.Data.Models.Transaction", "Transaction")
//                        .WithMany("Splits")
//                        .HasForeignKey("TransactionId")
//                        .IsRequired()
//                        .HasConstraintName("FK_Splits_Transactions");

//                    b.Navigation("Account");

//                    b.Navigation("Transaction");
//                });

//            modelBuilder.Entity("PiggyBank.Data.Models.Transaction", b =>
//                {
//                    b.HasOne("PiggyBank.Data.Models.Commodity", "Commodity")
//                        .WithMany()
//                        .HasForeignKey("CommodityId")
//                        .IsRequired()
//                        .HasConstraintName("FK_Transactions_Commodities");

//                    b.Navigation("Commodity");
//                });

//            modelBuilder.Entity("PiggyBank.Data.Models.Account", b =>
//                {
//                    b.Navigation("Children");

//                    b.Navigation("Splits");
//                });

//            modelBuilder.Entity("PiggyBank.Data.Models.Budget", b =>
//                {
//                    b.Navigation("Amounts");
//                });

//            modelBuilder.Entity("PiggyBank.Data.Models.Transaction", b =>
//                {
//                    b.Navigation("Splits");
//                });
//#pragma warning restore 612, 618
//        }
//    }
//}
