@if (Model is object && Nodes is object)
{
    foreach (var node in Nodes)
    {
        <tr>
            @if (node.Children.Count > 0)
            {
                var rowspan = node.CountAllChildren() + 1;
                <th headers="@(Model.Name.ToLower())-@(Model.FirstColumn.ToLower())" scope="rowgroup" rowspan="@rowspan">@node.Header</th>
            }
            else
            {
                <th scope="row">@node.Header</th>
            }

            @for (var d = Model.MaxDepth; d > Depth; d--)
            {
                <td aria-hidden="true"></td>
            }

            @for (var columnIndex = 0; columnIndex < node.Values.Count; columnIndex++)
            {
                <td headers="@(Model.Name.ToLower())-@(Model.Columns[columnIndex].ToLower())">@node.Values[columnIndex]</td>
            }
        </tr>

        if (node.Children.Count > 0)
        {
            <TreeTable_Node Model="Model" Nodes="node.Children" Depth="DepthPlusOne" />
        }
    }
}

@code {
    [Parameter]
    public TreeTableModel? Model { get; set; }

    [Parameter]
    public ICollection<TreeTableNodeModel>? Nodes { get; set; }

    [Parameter]
    public int Depth { get; set; } = 1;

    private int DepthPlusOne { get => Depth + 1; }
}
