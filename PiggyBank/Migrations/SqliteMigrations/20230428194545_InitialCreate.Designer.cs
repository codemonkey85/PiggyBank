// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PiggyBank.Models;

#nullable disable

namespace PiggyBank.Migrations.SqliteMigrations
{
    [DbContext(typeof(PiggyBankContext))]
    [Migration("20230428194545_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.0-preview.2.23128.3");

            modelBuilder.Entity("PiggyBank.Models.Account", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("CommodityId")
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsHidden")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsLocked")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsPlaceholder")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("ParentId")
                        .HasColumnType("TEXT");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id")
                        .HasAnnotation("SqlServer:Clustered", false);

                    b.HasIndex("CommodityId");

                    b.HasIndex("ParentId");

                    b.ToTable("Accounts");
                });

            modelBuilder.Entity("PiggyBank.Models.Commodity", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("TEXT");

                    b.Property<string>("Cusip")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("TEXT");

                    b.Property<string>("Mnemonic")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("TEXT");

                    b.Property<int>("Precision")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Symbol")
                        .HasMaxLength(16)
                        .HasColumnType("TEXT");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id")
                        .HasAnnotation("SqlServer:Clustered", false);

                    b.ToTable("Commodities");
                });

            modelBuilder.Entity("PiggyBank.Models.Configuration", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Key")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("TEXT");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("TEXT");

                    b.HasKey("Id")
                        .HasAnnotation("SqlServer:Clustered", false);

                    b.ToTable("Configurations");
                });

            modelBuilder.Entity("PiggyBank.Models.ExternalId", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("TEXT");

                    b.Property<string>("ExternalIdString")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("TEXT")
                        .HasColumnName("ExternalId");

                    b.Property<Guid>("LocalId")
                        .HasColumnType("TEXT");

                    b.Property<string>("Source")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "LocalId", "Source", "Type" }, "UX_LocalIDSourceType")
                        .IsUnique();

                    b.ToTable("ExternalIds");
                });

            modelBuilder.Entity("PiggyBank.Models.Split", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("AccountId")
                        .HasColumnType("TEXT");

                    b.Property<string>("Action")
                        .IsRequired()
                        .HasMaxLength(2048)
                        .HasColumnType("TEXT");

                    b.Property<string>("Memo")
                        .IsRequired()
                        .HasMaxLength(2048)
                        .HasColumnType("TEXT");

                    b.Property<decimal>("Quantity")
                        .HasColumnType("decimal(28, 9)");

                    b.Property<Guid>("TransactionId")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("Value")
                        .HasColumnType("decimal(28, 9)");

                    b.HasKey("Id")
                        .HasAnnotation("SqlServer:Clustered", false);

                    b.HasIndex("AccountId");

                    b.HasIndex("TransactionId");

                    b.ToTable("Splits");
                });

            modelBuilder.Entity("PiggyBank.Models.Transaction", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("CommodityId")
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(2048)
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("EnterDate")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("PostDate")
                        .HasColumnType("datetime");

                    b.HasKey("Id")
                        .HasAnnotation("SqlServer:Clustered", false);

                    b.HasIndex("CommodityId");

                    b.ToTable("Transactions");
                });

            modelBuilder.Entity("PiggyBank.Models.Account", b =>
                {
                    b.HasOne("PiggyBank.Models.Commodity", "Commodity")
                        .WithMany()
                        .HasForeignKey("CommodityId")
                        .IsRequired()
                        .HasConstraintName("FK_Accounts_Commodities");

                    b.HasOne("PiggyBank.Models.Account", "Parent")
                        .WithMany("Children")
                        .HasForeignKey("ParentId")
                        .HasConstraintName("FK_Accounts_Accounts");

                    b.Navigation("Commodity");

                    b.Navigation("Parent");
                });

            modelBuilder.Entity("PiggyBank.Models.Split", b =>
                {
                    b.HasOne("PiggyBank.Models.Account", "Account")
                        .WithMany("Splits")
                        .HasForeignKey("AccountId")
                        .IsRequired()
                        .HasConstraintName("FK_Splits_Accounts");

                    b.HasOne("PiggyBank.Models.Transaction", "Transaction")
                        .WithMany("Splits")
                        .HasForeignKey("TransactionId")
                        .IsRequired()
                        .HasConstraintName("FK_Splits_Transactions");

                    b.Navigation("Account");

                    b.Navigation("Transaction");
                });

            modelBuilder.Entity("PiggyBank.Models.Transaction", b =>
                {
                    b.HasOne("PiggyBank.Models.Commodity", "Commodity")
                        .WithMany()
                        .HasForeignKey("CommodityId")
                        .IsRequired()
                        .HasConstraintName("FK_Transactions_Commodities");

                    b.Navigation("Commodity");
                });

            modelBuilder.Entity("PiggyBank.Models.Account", b =>
                {
                    b.Navigation("Children");

                    b.Navigation("Splits");
                });

            modelBuilder.Entity("PiggyBank.Models.Transaction", b =>
                {
                    b.Navigation("Splits");
                });
#pragma warning restore 612, 618
        }
    }
}
