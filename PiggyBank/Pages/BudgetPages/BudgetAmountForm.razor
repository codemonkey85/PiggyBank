@attribute [Route(PageRoute.BudgetAmountAdd)]
@attribute [Route(PageRoute.BudgetAmountEdit)]

@if (!_found)
{
    <Notifications_NotFound Message="@_notFoundMessage" />
}
else if (_loading)
{
    <p>Loading...</p>
}
else
{
    <h1>@Action Budget Amounts for "@(_model.Budget.Name)"</h1>

    <EditForm EditContext="_editContext" OnValidSubmit="Save">
        <DataAnnotationsValidator />
        @*<ValidationSummary role="alert" aria-label="budget amounts form errors" />*@

        <div class="field">
            <label for="account">Account</label>
            <InputSelect id="account" @bind-Value="_model.AccountId" disabled="@_model.DisableAccountSelect">
                <option value="@(Guid.Empty)">Select Account...</option>
                @foreach (var account in _model.Accounts)
                {
                    <option value="@account.Id">@account.FullName</option>
                }
            </InputSelect>
        </div>

        <table>
            <thead>
                <tr>
                    <th>Period</th>
                    <th>Amount</th>
                </tr>
            </thead>
            @foreach (var period in _model.Amounts.Keys.Order())
            {
                var periodId = Guid.NewGuid();
                <tr>
                    <th><label for="@periodId">@period</label></th>
                    <td>
                        <input id="@periodId" value="@_model.Amounts[period]" required aria-required="true" />
                    </td>
                    @*<ValidationMessage For="() => _model.Amounts[period]" />*@
                </tr>
            }
        </table>

        <div class="buttons">
            <button class="primary" type="submit">Save</button>
            <button class="light" type="button" @onclick="Cancel">Cancel</button>
        </div>
    </EditForm>
}
